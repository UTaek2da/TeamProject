<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="CustomLoginSuccess" class="com.hanulso.security.CustomLoginSuccessHandler"/>
	<bean id="CustomUserDetailsService" class="com.hanulso.security.CustomUserDetailsService"/>
	<bean id="CustomDeniedHandler" class="com.hanulso.security.CustomAccessDeniedHandler"/>

	<!-- /include 안의 파일들을 security 제외 (jusoPopup.jsp에서 post 방식으로 데이터를 주고받기때문에 필요) -->
	<security:http pattern="/include/**" security="none"/>
	<security:http use-expressions="true" >
		<security:form-login login-page="/user/user_login.do" authentication-success-handler-ref="CustomLoginSuccess"/>
		<security:intercept-url pattern="/user/user_login.do" access="permitAll"/>
		<security:intercept-url pattern="/admin/manage/admin_cor_list.do" access="hasAnyRole('ROLE_ADMIN , ROLE_SUPER_ADMIN')"/>
		<security:intercept-url pattern="/user/user_insert_admin.do" access="hasRole('ROLE_SUPER_ADMIN')"/>
		<security:intercept-url pattern="/product/product_write3.do" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/product/product_write_pro.do" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/user/mailCheck_Request.do" access="hasAnyRole('ROLE_USER' , 'ROLE_NON')"/>
		
		<security:access-denied-handler ref="CustomDeniedHandler" />
		
		<!-- 로그아웃 -->
		<security:logout logout-url="/user/user_logout.do" invalidate-session="true" logout-success-url="/"/>
	</security:http>
	

	<security:authentication-manager>
		<security:authentication-provider user-service-ref="CustomUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- 가장 기본적인 설정 -->
	
	<!-- @PreAuthorize 어노테이션 사용가능하게 -->	
	<security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/>

</beans>
